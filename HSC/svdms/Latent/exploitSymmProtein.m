function [selectId,newprotInfo] = exploitSymmProtein(protInfo,sId,newprotInfo) 


  selectId = [];

  % work on each node 
  for i = 1:length(sId)
    
    id = sId(i);

    % which chain is the residue in
    chainId = min(find(protInfo.chLen >= id));

    % what is the location of the residue in the chain
    if chainId == 1
      ptn = id;
    else
      ptn = id - protInfo.chLen(chainId-1) ;
    end
    %keyboard;
    
    % exploiting the symmetry in the protein structure,
    % pick the suitable ids on all chains of the sub-unit
    subUnitId = protInfo.chains(chainId);
    % find all chains which have the same subUnitId
    chainId = find(protInfo.chains == subUnitId);    
    % work on each one of those chains 
    localId = [];
    for j = 1:length(chainId)
      cId = chainId(j);
      
      if cId == 1
	loC = 0 ;
      else
	loC = protInfo.chLen(cId-1);
      end
      localId = [localId; loC + ptn];
    end
    % update newprotInfo
    newprotInfo.chLen(chainId) = newprotInfo.chLen(chainId) + 1;
    %keyboard;
    selectId = [selectId; localId];
  end
  
  % TO DO: diffuse the markov matrix for the selectId columns
